name: Docker Image CI
on:
  push:
    branches:
      - develop
      - main

jobs:
  develop:
    name: Development docker build and push.
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' }}

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Build the Docker image
      run: |
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
        docker build -t ghcr.io/polyapi/polyapi-dev:latest -f docker/Dockerfile .
        docker push ghcr.io/polyapi/polyapi-dev:latest

    - name: Configure EKS context
      run: |
        aws s3 sync ./build s3://test-bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'ap-south-1'

    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - RUN: kubectl get pods -n development

  staging:
    name: Staging docker build and push.
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Build the Docker image
      run: |
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
        docker build -t ghcr.io/polyapi/polyapi-stg:latest -f docker/Dockerfile .
        docker push ghcr.io/polyapi/polyapi-stg:latest
