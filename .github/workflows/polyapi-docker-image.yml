name: Docker Image CI
on:
  push:
    branches:
      - develop
      - main
      - cicd-improvement-fm

jobs:
  develop:
    name: Development docker build and push.
    runs-on: ubuntu-latest
    # if: ${{ github.ref == 'refs/heads/develop' }}

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
      IMAGE: ghcr.io/polyapi/polyapi-dev
      
    steps:
    - uses: actions/checkout@v3
    
    # - name: Build the Docker image
    #   run: |
    #     echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
    #     docker build -t ${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }} -f docker/Dockerfile .
    #     docker push ${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }}

    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          client:
            - 'packages/client/package.json'

    - if: steps.changes.outputs.client == 'true'
      name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    # - if: steps.changes.outputs.client == 'true'
    #   name: Install
    #   run: cd packages/client && npm ci

    - if: steps.changes.outputs.client == 'true'
      name: Publish package
      run: yarn install && prisma generate --generator py --schema ../prisma/schema.prisma && cd packages/client && npm install --include=dev && npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  main:
    name: Main docker build and push.
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
      IMAGE: ghcr.io/polyapi/polyapi-main
      
    steps:
    - uses: actions/checkout@v3

    - name: Build the Docker image
      run: |
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
        docker build -t ${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }} -f docker/Dockerfile .
        docker push ${{ env.IMAGE }}:${{ github.sha }}-${{ github.run_number }}

