import poly = require("./index");

type UnregisterWebhookEventListenerType = () => void;
type AuthFunctionCallbackType = (url?: string, token?: string, error?: { message: string }) => any;

{{{returnTypeDefinitions}}}
{{{functionArgumentsTypeDeclarations}}}
{{{webhookHandlesEventTypeDefinitions}}}
declare module "./index" {
  interface {{interfaceName}} {
    {{#each subContexts}}
      {{name}}: {{interfaceName}};
    {{/each}}
    {{#each functions}}
      {{#if hasPayloadArguments}}
        {{name}}({{#each requiredArguments}}{{name}}: {{{type}}}, {{/each}}payload: {
          {{#each payloadArguments}}
            {{name}}{{#unless required}}?{{/unless}}: {{type}},
          {{/each}}
        }, {{#each optionalArguments}}{{name}}?: {{{type}}}{{#unless @last}}, {{/unless}}{{/each}}): {{{returnTypeName}}};
      {{else}}
        {{name}}({{#each arguments}}{{name}}{{#unless required}}?{{/unless}}: {{{type}}}{{#unless @last}}, {{/unless}}{{/each}}): {{{returnTypeName}}};
      {{/if}}
    {{/each}}
    {{#each webhookHandles}}
      {{name}}(callback: (event: {{{eventTypeName}}}) => any): UnregisterWebhookEventListenerType;
    {{/each}}
    {{#each authFunctions}}
      {{name}}(clientId: string, clientSecret: string, scopes: string[], callback: AuthFunctionCallbackType, timeout?: number): void;
    {{/each}}
  }
}
