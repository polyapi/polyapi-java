const axios = require('axios');
const set = require('lodash/set');
const { io } = require("socket.io-client");
const { v4: uuidv4 } = require('uuid');

const clientID = uuidv4();
const socket = io('{{apiBaseUrl}}/events');

const functions = [
{{#each functions}}
  {{#if context}}
  ['{{context}}.{{name}}', '{{id}}'],
  {{else}}
  ['{{name}}', '{{id}}'],
  {{/if}}
{{/each}}
];

const errorHandler = {
  on: (path, callback) => {
    socket.emit('registerErrorHandler', {
      clientID,
      path,
      apiKey: '{{apiKey}}'
    });
    socket.on(`handleError:${path}`, callback);
  },
  off: (path) => {
    socket.emit('unregisterErrorHandler', {
      clientID,
      path,
      apiKey: '{{apiKey}}'
    });
  }
};

module.exports = {
  ...functions.reduce(
    (acc, [name, id]) => set(acc, name, (...args) => axios.post(`{{apiBaseUrl}}/function/execute/${id}`, { clientID, args }).then(({ data }) => data)),
    {}
  ),
  errorHandler
};
