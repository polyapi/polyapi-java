{{#each contexts}}
/// <reference path="./{{fileName}}" />
{{/each}}
/// <reference path="./vari/index.d.ts" />

{{#each contexts}}
{{#if firstLevel}}
export const {{name}}: {{interfaceName}};
{{/if}}
{{/each}}

declare const poly: Poly;
export default poly;

export type UnregisterWebhookEventListener = () => void;
export type AuthFunctionCallback = (token?: string, url?: string, error?: any) => any;
export interface ApiFunctionResponse<T> {
  status: number;
  data: T;
  headers: Record<string, string>;
}

export interface GraphqlAPIFunctionResponse<T> {
  status: number;
  headers: Record<string, string>;
  data: Partial<T & { errors?: any[]}>
}

export interface ErrorEvent {
  message: string;
  data?: any;
  status?: number;
  statusText?: string;
  functionId: string;
  applicationId?: string;
  userId?: string;
}
export interface ErrorHandlerOptions {
  applicationIds?: string[];
  environmentIds?: string[];
  functionIds?: string[];
  tenant?: boolean;
}
export type UnregisterErrorHandler = () => void;

interface ErrorHandler {
  on: (path: string, handler: (error: ErrorEvent) => void, options?: ErrorHandlerOptions) => UnregisterErrorHandler;
}
export const errorHandler: ErrorHandler;
export const vari: vari.Vari;
